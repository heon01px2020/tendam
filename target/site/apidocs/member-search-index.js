memberSearchIndex = [{"p":"edu.brown.cs.student.stars","c":"BoundedPriorityQueue","l":"add(T)"},{"p":"edu.brown.cs.student.maps","c":"Pathfinder","l":"aStar(V, V)","url":"aStar(V,V)"},{"p":"edu.brown.cs.student.stars","c":"BoundedPriorityQueue","l":"BoundedPriorityQueue(int)","url":"%3Cinit%3E(int)"},{"p":"edu.brown.cs.student.maps","c":"MapCommand","l":"buildKDTree()"},{"p":"edu.brown.cs.student.stars","c":"Common","l":"calcDistance(double[], double[])","url":"calcDistance(double[],double[])"},{"p":"edu.brown.cs.student.maps","c":"MapCommand","l":"checkColumns()"},{"p":"edu.brown.cs.student.maps","c":"Database","l":"checkColumnsExist(List<String>, String)","url":"checkColumnsExist(java.util.List,java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"CSVParser","l":"checkFormat(List<LinkedHashMap<String, String>>, List<String>, List<String>)","url":"checkFormat(java.util.List,java.util.List,java.util.List)"},{"p":"edu.brown.cs.student.stars","c":"Common","l":"checkRegex(List<String>, List<String>)","url":"checkRegex(java.util.List,java.util.List)"},{"p":"edu.brown.cs.student.stars","c":"Common","l":"checkRegex(String, String)","url":"checkRegex(java.lang.String,java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"NaiveRadius","l":"chooseWithinRadius(double, List<Star>)","url":"chooseWithinRadius(double,java.util.List)"},{"p":"edu.brown.cs.student.stars","c":"SortByDimension","l":"compare(T, T)","url":"compare(T,T)"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"compareTo(Node)","url":"compareTo(edu.brown.cs.student.maps.Node)"},{"p":"edu.brown.cs.student.maps","c":"Path","l":"compareTo(Path)","url":"compareTo(edu.brown.cs.student.maps.Path)"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"compareTo(Star)","url":"compareTo(edu.brown.cs.student.stars.Star)"},{"p":"edu.brown.cs.student.stars","c":"Common","l":"copyStarListExcept(String)","url":"copyStarListExcept(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"CSVParser","l":"CSVParser(Reader)","url":"%3Cinit%3E(java.io.Reader)"},{"p":"edu.brown.cs.student.maps","c":"Database","l":"Database(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"Pathfinder","l":"dijkstra(V, V)","url":"dijkstra(V,V)"},{"p":"edu.brown.cs.student.maps","c":"Haversine","l":"distance(double, double, double, double)","url":"distance(double,double,double,double)"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"edgeToSelf(double)"},{"p":"edu.brown.cs.student.maps","c":"Vertex","l":"edgeToSelf(double)"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"edu.brown.cs.student.maps","c":"Path","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"edu.brown.cs.student.maps","c":"MapCommand","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"NearestCommand","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"RouteCommand","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"WaysCommand","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"Command","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"Mock","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"NaiveNeighbors","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"NaiveRadius","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"Neighbors","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"Radius","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"Stars","l":"execute(String)","url":"execute(java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"Database","l":"fileExists(String)","url":"fileExists(java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"RouteCommand","l":"findIntersection(String, String)","url":"findIntersection(java.lang.String,java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"NaiveNeighbors","l":"findKNearestNeighbor(int, double, double, double)","url":"findKNearestNeighbor(int,double,double,double)"},{"p":"edu.brown.cs.student.stars","c":"Neighbors","l":"findKNearestNeighbor(int, double, double, double)","url":"findKNearestNeighbor(int,double,double,double)"},{"p":"edu.brown.cs.student.stars","c":"NaiveNeighbors","l":"findKNearestNeighbor(int, String)","url":"findKNearestNeighbor(int,java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"Neighbors","l":"findKNearestNeighbor(int, String)","url":"findKNearestNeighbor(int,java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"findKNN(int, double[])","url":"findKNN(int,double[])"},{"p":"edu.brown.cs.student.maps","c":"NearestCommand","l":"findNearestTraversableNode(double, double)","url":"findNearestTraversableNode(double,double)"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"findNeighbors()"},{"p":"edu.brown.cs.student.maps","c":"Vertex","l":"findNeighbors()"},{"p":"edu.brown.cs.student.maps","c":"Pathfinder","l":"findPath(V, V, boolean)","url":"findPath(V,V,boolean)"},{"p":"edu.brown.cs.student.stars","c":"Common","l":"findStarByName(String)","url":"findStarByName(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"NaiveRadius","l":"findStarWithinRadius(double, double, double, double)","url":"findStarWithinRadius(double,double,double,double)"},{"p":"edu.brown.cs.student.stars","c":"Radius","l":"findStarWithinRadius(double, double, double, double)","url":"findStarWithinRadius(double,double,double,double)"},{"p":"edu.brown.cs.student.stars","c":"NaiveRadius","l":"findStarWithinRadius(double, String)","url":"findStarWithinRadius(double,java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"Radius","l":"findStarWithinRadius(double, String)","url":"findStarWithinRadius(double,java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"WaysCommand","l":"findWays(double, double, double, double)","url":"findWays(double,double,double,double)"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"findWithinRadius(double, double[])","url":"findWithinRadius(double,double[])"},{"p":"edu.brown.cs.student.stars","c":"Common","l":"getAllStars()"},{"p":"edu.brown.cs.student.maps","c":"Database","l":"getConnection()"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"getCoordinate()"},{"p":"edu.brown.cs.student.maps","c":"Vertex","l":"getCoordinate()"},{"p":"edu.brown.cs.student.stars","c":"HasCoordinate","l":"getCoordinate()"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"getCoordinate()"},{"p":"edu.brown.cs.student.maps","c":"MapCommand","l":"getDatabase()"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"getDistance()"},{"p":"edu.brown.cs.student.stars","c":"HasCoordinate","l":"getDistance()"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"getDistance()"},{"p":"edu.brown.cs.student.maps","c":"Edge","l":"getEnd()"},{"p":"edu.brown.cs.student.maps","c":"Path","l":"getEnd()"},{"p":"edu.brown.cs.student.maps","c":"Edge","l":"getID()"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"getID()"},{"p":"edu.brown.cs.student.maps","c":"Path","l":"getID()"},{"p":"edu.brown.cs.student.maps","c":"Vertex","l":"getID()"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"getID()"},{"p":"edu.brown.cs.student.stars","c":"NaiveNeighbors","l":"getKStars(int, List<Star>)","url":"getKStars(int,java.util.List)"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"getLeftNodeValue()"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"getName()"},{"p":"edu.brown.cs.student.maps","c":"Pathfinder","l":"getNodeNeighborCache()"},{"p":"edu.brown.cs.student.maps","c":"MapCommand","l":"getNodes()"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"getNodeValue()"},{"p":"edu.brown.cs.student.maps","c":"MapCommand","l":"getPathfinder()"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"getRightNodeValue()"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"getRoot()"},{"p":"edu.brown.cs.student.maps","c":"Edge","l":"getStart()"},{"p":"edu.brown.cs.student.maps","c":"Path","l":"getStart()"},{"p":"edu.brown.cs.student.maps","c":"Edge","l":"getWeightedDistance()"},{"p":"edu.brown.cs.student.maps","c":"Path","l":"getWeightedDistance()"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"hashCode()"},{"p":"edu.brown.cs.student.maps","c":"Path","l":"hashCode()"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"hashCode()"},{"p":"edu.brown.cs.student.maps","c":"Haversine","l":"haversine(double)"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"height()"},{"p":"edu.brown.cs.student.maps","c":"Pathfinder","l":"heuristic(V, V)","url":"heuristic(V,V)"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"insert(T)"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"insertAll(List<T>)","url":"insertAll(java.util.List)"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"KDTree(int, List<T>)","url":"%3Cinit%3E(int,java.util.List)"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"KDTree(int)","url":"%3Cinit%3E(int)"},{"p":"edu.brown.cs.student.maps","c":"MapCommand","l":"loadDatabase(String)","url":"loadDatabase(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"Stars","l":"loadStarData(String)","url":"loadStarData(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"Main","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"edu.brown.cs.student.maps","c":"MapCommand","l":"MapCommand()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.stars","c":"Mock","l":"Mock()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.stars","c":"MockPerson","l":"MockPerson(String, String, String, String, String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"NaiveNeighbors","l":"NaiveNeighbors()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.stars","c":"NaiveRadius","l":"NaiveRadius()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.maps","c":"NearestCommand","l":"NearestCommand()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.stars","c":"Neighbors","l":"Neighbors()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"Node(String, double, double)","url":"%3Cinit%3E(java.lang.String,double,double)"},{"p":"edu.brown.cs.student.stars","c":"CSVParser","l":"parseAll()"},{"p":"edu.brown.cs.student.stars","c":"CSVParser","l":"parseLine(String)","url":"parseLine(java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"RouteCommand","l":"parsePaths(Map<String, Path>, String, String)","url":"parsePaths(java.util.Map,java.lang.String,java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"Path","l":"Path(T, T, double, String)","url":"%3Cinit%3E(T,T,double,java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"Pathfinder","l":"Pathfinder()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.stars","c":"BoundedPriorityQueue","l":"peekLowestPriority()"},{"p":"edu.brown.cs.student.stars","c":"Mock","l":"printMockPeople(String)","url":"printMockPeople(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"printTree()"},{"p":"edu.brown.cs.student.stars","c":"Radius","l":"Radius()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.stars","c":"REPL","l":"registerCommand(String, Command)","url":"registerCommand(java.lang.String,edu.brown.cs.student.stars.Command)"},{"p":"edu.brown.cs.student.stars","c":"Common","l":"removeQuotes(String)","url":"removeQuotes(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"REPL","l":"REPL()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.maps","c":"MapCommand","l":"resetDB()"},{"p":"edu.brown.cs.student.maps","c":"RouteCommand","l":"RouteCommand()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.stars","c":"REPL","l":"run(String)","url":"run(java.lang.String)"},{"p":"edu.brown.cs.student.maps","c":"Database","l":"runSQLQuery(String)","url":"runSQLQuery(java.lang.String)"},{"p":"edu.brown.cs.student.stars","c":"Common","l":"setAllStars(List<Star>)","url":"setAllStars(java.util.List)"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"setDistance(double)"},{"p":"edu.brown.cs.student.stars","c":"HasCoordinate","l":"setDistance(double)"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"setDistance(double)"},{"p":"edu.brown.cs.student.maps","c":"MapCommand","l":"setKDTreeNodes(List<Node>)","url":"setKDTreeNodes(java.util.List)"},{"p":"edu.brown.cs.student.stars","c":"Common","l":"setStarDistanceFrom(double[], List<Star>)","url":"setStarDistanceFrom(double[],java.util.List)"},{"p":"edu.brown.cs.student.maps","c":"Edge","l":"setWeightedDistance(double)"},{"p":"edu.brown.cs.student.maps","c":"Path","l":"setWeightedDistance(double)"},{"p":"edu.brown.cs.student.maps","c":"RouteCommand","l":"shortestPathIntersection(String, String, String, String, int)","url":"shortestPathIntersection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"},{"p":"edu.brown.cs.student.maps","c":"RouteCommand","l":"shortestPathNodes(double, double, double, double, int)","url":"shortestPathNodes(double,double,double,double,int)"},{"p":"edu.brown.cs.student.stars","c":"BoundedPriorityQueue","l":"size()"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"size()"},{"p":"edu.brown.cs.student.stars","c":"SortByDimension","l":"SortByDimension(int)","url":"%3Cinit%3E(int)"},{"p":"edu.brown.cs.student.stars","c":"KDTree","l":"sortList(List<T>, int)","url":"sortList(java.util.List,int)"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"Star(int, String, double, double, double)","url":"%3Cinit%3E(int,java.lang.String,double,double,double)"},{"p":"edu.brown.cs.student.stars","c":"Stars","l":"Stars()","url":"%3Cinit%3E()"},{"p":"edu.brown.cs.student.stars","c":"BoundedPriorityQueue","l":"toList()"},{"p":"edu.brown.cs.student.maps","c":"Edge","l":"toString()"},{"p":"edu.brown.cs.student.maps","c":"Node","l":"toString()"},{"p":"edu.brown.cs.student.maps","c":"Path","l":"toString()"},{"p":"edu.brown.cs.student.stars","c":"MockPerson","l":"toString()"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"toString()"},{"p":"edu.brown.cs.student.stars","c":"Star","l":"toString(List)","url":"toString(java.util.List)"},{"p":"edu.brown.cs.student.stars","c":"MockPerson","l":"toString(List<MockPerson>)","url":"toString(java.util.List)"},{"p":"edu.brown.cs.student.maps","c":"WaysCommand","l":"WaysCommand()","url":"%3Cinit%3E()"}]